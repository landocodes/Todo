{"version":3,"sources":["components/cardlist/card/card.component.jsx","components/cardlist/cardlist.component.jsx","components/searchBox/searchBox.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","robot","id","name","email","Cardlist","robots","map","SearchBox","placeholder","handlechange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredRobots","filter","toLowerCase","includes","searchValue","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACjB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,YCFVC,G,MAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAAAN,GAAK,OAAK,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCJvCM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAC/BF,YAAaA,EACbG,SAAUF,MC2DCG,E,kDA3Db,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,OAAQ,GACRS,YAAa,IAJJ,E,qDAQf,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,OAAQc,S,oBAGxC,WAAU,IAAD,OAEP,EAA8BE,KAAKR,MAA5BR,EAAP,EAAOA,OAAQS,EAAf,EAAeA,YACTQ,EAAiBjB,EAAOkB,QAAO,SAAAvB,GAAK,OAAIA,EAAME,KAAKsB,cAAcC,SAASX,EAAYU,kBAE5F,OACE,sBAAK3B,UAAU,MAAf,UACA,gDAGA,cAAC,EAAD,CACAW,YAAa,oBAAqBC,aAAc,SAAAiB,GAAW,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAYC,OAAOC,WAI/G,eAAC,EAAD,CAAUvB,OAAQiB,EAAlB,cACCD,KAAKR,MAAMR,OAAOC,KAAI,SAAAN,GAAK,OAAI,6BAAoBA,EAAME,MAAjBF,EAAMC,iB,GA/BnC4B,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4340cb33.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n    <img alt='robot' src={`https://robohash.org/${props.robot.id}?set=set3&size=180x180`}></img>\r\n       <h2>{props.robot.name}</h2>\r\n       <p>{props.robot.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from './card/card.component';\r\nimport './cardlist.css';\r\n\r\n//Components take in props\r\nexport const Cardlist = props =>\r\n    (<div className='card-list'>{\r\n        props.robots.map(robot => (<Card key={robot.id} robot={robot}/>)\r\n      )}</div>);\r\n\r\n","import React from \"react\";\r\nimport './searchBox.css';\r\n\r\nexport const SearchBox = ({placeholder, handlechange} )=> (\r\n    <input className='search' type='search' \r\n    placeholder={placeholder} \r\n    onChange={handlechange}/>\r\n); ","import React from 'react';\nimport './App.css';\nimport { Cardlist } from './components/cardlist/cardlist.component';\nimport { SearchBox } from './components/searchBox/searchBox.components';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''\n  };\n}\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json()) \n    .then(users => this.setState({robots: users}));\n}\n  \n  render() {\n\n    const {robots, searchField} = this.state;\n    const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()));\n    \n    return(\n      <div className=\"App\">\n      <h1 >\n        Robots Rolodex\n      </h1>\n      <SearchBox \n      placeholder={\"Search for Robots\"} handlechange={searchValue => this.setState({ searchField: searchValue.target.value})}>\n\n      </SearchBox>\n      \n      <Cardlist robots={filteredRobots}> {\n       this.state.robots.map(robot => <h1 key={robot.id}>{robot.name}</h1>)}\n       </Cardlist>\n      \n    </div>\n  );\n    }\n  }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}